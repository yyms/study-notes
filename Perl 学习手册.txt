
1、首先Perl和Python最大的不同就是Perl行的末尾需要分号
   变量需要使用前缀表示不同的变量类型（而非数据类型）

2、Perl数据类型
类型 	字符 	例子 		用于哪种名字
标量 	$ 	$cents 		一个独立的数值(数字或字串)
数组 	@ 	@large 	一列数值,用编号做键字
散列 	% 	%interest 	一组数值,用字串做键字
子过程  & 	&how		一段可以调用的 Perl 代码
类型团  * 	*struck 	所有叫 struck 的东西

数组赋值
@home = ("couch", "chair", "table", "stove");
($potato, $lift, $tennis, $pipe) = @home;
$home[0] = "couch";
数组的赋值是平行的，所以
($alpha, $omega) = ( $omega, $alpha); 可以用来交换变量的值

另外还可以使用一个标量来引用一个匿名数组，匿名数组使用[]来定义
$arr_var = ["one","two","three"];
print @{$arr_var}[1];

散列
%longday = ("Sun" => "Sunday","Sat" => "Saturday");
print $longday{"Sun"};


3
“” 可以进行特殊字符的替换，比如换行等
‘’ 没有替换作用
｀｀执行勾号里面的命令

4
Perl 也有一些主题化的方法,最主要的就是使用 package 声明。这样在下面的动词引用中，默认的就都是使用
这个命名空间范围里的动词了
use 声明不仅可以让你使用其他包的动词,同时也检查磁盘上载入的模块名称
use strict
strict 模块干的事是更加严格地约束 Perl 中的一些规则,这样你在很多方面必须更明确,
而不是让 Perl 去猜.缺省的 Perl 是为小程序优化的,有了 strict,Perl 对于那些需要更多维护的大
型工程也是相当好的.

5、历史上,Perl 要求你在调用的任何用户定义子过程的前面加一个与号(&)，比如$fido = &fetch();
到了 Perl 版本 5,这个与号是可选的了,所以用户定义动词现在可以和内建动词相同的方法进行调用了($fido = fetch();)

6、文件句柄类型。文件句柄只是你给文件,设备,网络套接字或管道起的一个名字,
这样可以帮助你分清你正在和那个文件或设备通讯,同时掩藏了如缓冲等复杂性。
可以使用 open 创建并关联一个文件。open 函数需要至少两个参数:文件句柄和你希望与文件句柄关联的文件名。
Perl 也给你一些预定义(并且预先打开)的文件句柄。：STDIN是我们程序的标准输入,STDOUT 是标准输出,STDERR 是一个额外的输出途径,
open(SESAME, "filename")   # 从现存文件中读取
open(SESAME, "<filename")  # (一样的东西,明确地做)
open(SESAME, ">filename")  # 创建文件并写入
open(SESAME, ">>filename") # 附加在现存文件后面
open(SESAME, "| output-pipe-command") # 设置一个输出过滤器
open(SESAME, "input-pipe-command |")  # 设置一个输入过滤器
一旦打开,文件句柄 SESAME 可以被用来访问相应的文件或管道,直到它被明确地关闭( close(SESAME))或者另外一个 open 语句将文件句柄同别的文件关联起来。

可以使用读行操作符 <> 来读入一行,当使用空的读行操作符时,将读入命令行上指定的所有文件,当命令行未指定时,读入标准输入 STDIN。
同时，因为读行操作符不能自动将新行符从你的输入中删除，Perl 提供了 chop 和 chomp 函数,chop 不加区别地去处字符串地最后一个字符,
并将结果返回,而 chomp 仅删除结束标记(通常是“\n”)同时返回被删除的字符数。
print STDOUT "Please enter a number:";
chop($number = <STDIN>);
print STDOUT "The number is $number.\n";

7、双目算术操作符
＋  －  ＊  ／  ％  ＊＊
最后，$a**$b表示区$a的$b次幂，优先级高于乘除法
对于字符串类型的操作（实际数字和字符串看起来很混杂）
. 用于字符串的相连，而x表示字符串的重复次数，当然x要同两个变量有空格的分割来识别
而且Perl具有C语言其他没有的赋值运算符号，比如 .= x= ||=

真正能使 c 程序员惊讶的是在 Perl 中,赋值语句返回实际的变量作为 lvalue。因此你可
以在同一个语句中多次改变同一个变量的值
($temp -= 32) *= 5/9;
chop ($number = <STDIN>);

8、逻辑操作符
Perl中的逻辑操作符绝对的是“短路操作”符，总共有两套逻辑操作符
C语言类型（优先级比逗号高） && || !
BASIC类型（优先级比逗号低） and or not xor(只能一个为真)
比如 open(GRADES,"grades") or die "xxx $!"; 其中$!变量包含了操作系统返回的错误信息,、

9 比较运算符
数字      == != < > <= >=
字符串    eq ne lt gt le ge

10 文件测试操作符
-e $a 	存在 	如果在 $a 中命名的文件存在则为真
-r $a 	可读 	如果在 $a 中命名的文件可读则为真
-w $a 	可写 	如果在 $a 中命名的文件可写则为真
-d $a 	目录 	如果在 $a 中命名的文件是目录则为真
-f $a 	文件 	如果在 $a 中命名的文件是普通文件则为真
-T $a 	文本文件 如果在 $a 中命名的文件是文本文件则为真
注意：文本文件与二进制文件对应.而普通文件则是和目录及设备等非普通文件相对应.
-e "/usr/bin/perl" or warn "Maybe perl is not installed\n";












